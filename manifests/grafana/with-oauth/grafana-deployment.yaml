- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: grafana
    name: grafana
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: grafana
    template:
      metadata:
        labels:
          app: grafana
        name: grafana
      spec:
        serviceAccountName: grafana
        containers:
        - name: oauth-proxy
          image: openshift/oauth-proxy:v1.0.0
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 8443
            name: web
          args:
          - -https-address=:8443
          - -http-address=
          - -email-domain=*
          - -client-id=system:serviceaccount:grafana:grafana
          - -upstream=http://localhost:3000
          - -provider=openshift
          - '-openshift-delegate-urls={"/": {"resource": "namespace", "verb": "get"}}'
          - '-openshift-sar={"namespace": "grafana", "verb": "list", "resource": "services"}'
          - -tls-cert=/etc/tls/private/tls.crt
          - -tls-key=/etc/tls/private/tls.key
          - -client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token
          - -cookie-secret-file=/etc/proxy/secrets/session_secret
          - '-openshift-service-account=grafana'
          - '-openshift-ca=/etc/pki/tls/cert.pem'
          - '-openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
          - '-skip-auth-regex=^/metrics'
          volumeMounts:
          - mountPath: /etc/tls/private
            name: grafana-tls
          - mountPath: /etc/proxy/secrets
            name: secrets

        - name: grafana
          image: grafana/grafana
          ports:
          - name: grafana-http
            containerPort: 3000
          args:
          - '-config=/etc/grafana/conf/defaults.ini'
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi

          volumeMounts:
          - mountPath: /var/lib/grafana
            name: grafana-lib-volume
          - mountPath: /var/log/grafana
            name: grafana-log-volume
          - mountPath: /etc/grafana/provisioning/datasources
            name: grafana-datasources
            readOnly: false
          - mountPath: /etc/grafana/conf
            name: grafana-etc-volume
            readOnly: false
          - mountPath: /etc/tls/private
            name: grafana-tls
          - mountPath: /etc/proxy/secrets
            name: secrets

        volumes:
        - configMap:
            name: grafana-config
          name: grafana-etc-volume
        - name: grafana-datasources
          configMap:
            name: grafana-datasources
        - name: grafana-lib-volume
          persistentVolumeClaim:
            claimName: grafana-lib-pvc
        - name: grafana-log-volume
          persistentVolumeClaim:
            claimName: grafana-log-pvc
        - name: secrets
          secret:
            secretName: grafana-proxy
        - name: grafana-tls
          secret:
            secretName: grafana-tls
